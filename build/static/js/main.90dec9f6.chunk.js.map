{"version":3,"sources":["components/Card.tsx","App.tsx","index.web.ts"],"names":["Card","width","useWindowDimensions","View","style","styles","content","contenBig","Text","title","paragraph","enter","StyleSheet","create","root","flex","justifyContent","alignItems","backgroundColor","color","fontSize","fontWeight","textAlign","marginBottom","marginTop","maxWidth","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","padding","paddingLeft","paddingRight","button","overflow","buttonInner","minHeight","buttonText","App","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"yLAyBeA,EAtBF,WACX,IAAQC,EAAUC,cAAVD,MAER,OACE,eAACE,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,QAASL,EAAQ,KAAOI,EAAOE,WAApD,UACE,cAACC,EAAA,EAAD,CAAMJ,MAAOC,EAAOI,MAApB,iDACA,cAACD,EAAA,EAAD,CAAMJ,MAAOC,EAAOK,UAApB,6GAIA,cAACF,EAAA,EAAD,CAAMJ,MAAOC,EAAOK,UAApB,+FAIA,cAACP,EAAA,EAAD,CAAMC,MAAOC,EAAOM,QACpB,cAACH,EAAA,EAAD,CAAMJ,MAAOC,EAAOK,UAApB,sEAUAL,EAASO,IAAWC,OAAO,CAC/BC,KAAM,CACJC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,WAEnBT,MAAO,CACLU,MAAO,OACPC,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,aAAc,IAEhBb,UAAW,CACTS,MAAO,OACPC,SAAU,GACVI,UAAW,IAEblB,QAAS,CACPmB,SAAU,IACVxB,MAAO,OACPyB,aAAc,GACdR,gBAAiB,OACjBM,UAAW,GACXG,YAAa,OACbC,aAAc,CACZ3B,MAAO,EACP4B,OAAQ,IAEVC,cAAe,IACfC,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,YAAa,GACbC,aAAc,IAEhB5B,UAAW,CACT0B,QAAS,GACTC,YAAa,GACbC,aAAc,IAEhBC,OAAQ,CACNV,aAAc,GACdW,SAAU,SACVb,UAAW,IAEbc,YAAa,CACXC,UAAW,GACXb,aAAc,GACdR,gBAAiB,OACjBD,WAAY,SACZD,eAAgB,UAElBwB,WAAY,CACVrB,MAAO,OACPC,SAAU,GACVC,WAAY,QAEdV,MAAO,CAAEkB,OAAQ,MC/EJ,SAASY,IAEtB,OAEE,cADA,CACCtC,EAAA,EAAD,CAAMC,MAAOC,EAAOS,KAApB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAMN,IAAMT,EAASO,IAAWC,OAAO,CAC/BC,KAAM,CACJC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,WAEnBT,MAAO,CACLU,MAAO,OACPC,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,aAAc,IAEhBb,UAAW,CACTS,MAAO,OACPC,SAAU,GACVI,UAAW,IAEblB,QAAS,CACPmB,SAAU,IACVxB,MAAO,OACPyB,aAAc,GACdR,gBAAiB,OACjBM,UAAW,GACXG,YAAa,OACbC,aAAc,CACZ3B,MAAO,EACP4B,OAAQ,IAEVC,cAAe,IACfC,aAAc,GACdC,UAAW,GACXC,QAAS,GACTC,YAAa,GACbC,aAAc,IAEhB5B,UAAW,CACT0B,QAAS,GACTC,YAAa,GACbC,aAAc,IAEhBC,OAAQ,CACNV,aAAc,GACdW,SAAU,SACVb,UAAW,IAEbc,YAAa,CACXC,UAAW,GACXb,aAAc,GACdR,gBAAiB,OACjBD,WAAY,SACZD,eAAgB,UAElBwB,WAAY,CACVrB,MAAO,OACPC,SAAU,GACVC,WAAY,QAEdV,MAAO,CAAEkB,OAAQ,MC5EnBa,IAAYC,kBAAkB,WAAW,kBAAMF,KAE/CC,IAAYE,eAAe,UAAW,CACpCC,QAASC,SAASC,eAAe,Y","file":"static/js/main.90dec9f6.chunk.js","sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet, useWindowDimensions } from 'react-native';\n\nconst Card = () => {\n  const { width } = useWindowDimensions();\n\n  return (\n    <View style={[styles.content, width > 900 && styles.contenBig]}>\n      <Text style={styles.title}>Are you ready for React Native Web?</Text>\n      <Text style={styles.paragraph}>\n        It will save you a lot of time and you can almost always share more\n        than 90% of your code base.\n      </Text>\n      <Text style={styles.paragraph}>\n        You can always make an abstraction for the web version. Like the\n        component below.\n      </Text>\n      <View style={styles.enter} />\n      <Text style={styles.paragraph}>\n        Let's try add some some different background colors.\n      </Text>\n    </View>\n  );\n};\n\nexport default Card;\n\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#1275e6',\n  },\n  title: {\n    color: '#000',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  paragraph: {\n    color: '#000',\n    fontSize: 16,\n    marginTop: 12,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    borderRadius: 20,\n    backgroundColor: '#fff',\n    marginTop: 50,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.28,\n    shadowRadius: 16.0,\n    elevation: 24,\n    padding: 20,\n    paddingLeft: 12,\n    paddingRight: 12,\n  },\n  contenBig: {\n    padding: 40,\n    paddingLeft: 40,\n    paddingRight: 40,\n  },\n  button: {\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 12,\n  },\n  buttonInner: {\n    minHeight: 46,\n    borderRadius: 10,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  enter: { height: 20 },\n});\n","import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  // ScrollView,\n} from 'react-native';\nimport Card from './components/Card';\n\nexport default function App() {\n\n  return (\n    // <ScrollView style={styles.root}>\n    <View style={styles.root}>\n      <Card />\n      <Card />\n    </View>\n    // </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#1275e6',\n  },\n  title: {\n    color: '#000',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  paragraph: {\n    color: '#000',\n    fontSize: 16,\n    marginTop: 12,\n  },\n  content: {\n    maxWidth: 600,\n    width: '100%',\n    borderRadius: 20,\n    backgroundColor: '#fff',\n    marginTop: 50,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 12,\n    },\n    shadowOpacity: 0.28,\n    shadowRadius: 16.0,\n    elevation: 24,\n    padding: 20,\n    paddingLeft: 12,\n    paddingRight: 12,\n  },\n  contenBig: {\n    padding: 40,\n    paddingLeft: 40,\n    paddingRight: 40,\n  },\n  button: {\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginTop: 12,\n  },\n  buttonInner: {\n    minHeight: 46,\n    borderRadius: 10,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  enter: { height: 20 },\n});\n","import { AppRegistry } from 'react-native';\nimport App from './App';\n\nAppRegistry.registerComponent('appName', () => App);\n\nAppRegistry.runApplication('appName', {\n  rootTag: document.getElementById('root'),\n});\n\n\n"],"sourceRoot":""}